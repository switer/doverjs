#!/usr/bin/env node
var program = require('commander'),
	chiProc = require('child_process'),
	currentPath = encodeURIComponent(process.cwd()),
	NOTICE_MSG = 'Runing...Covering will takes a few time, Please wait a monment',
	cmd;

program
  .version('0.1.0')
  .usage('[options] <file ...>')
  .option('-c, --console', 'print process result in console')
  .option('-d, --destination <files>', 'destination file <file, file, ...>')
  .option('-j, --json <file>', 'using json config file')
  .option('-o, --output <file>', 'Output result')
  .option('-S, --statistics', 'print statistics in console')
  .option('-s, --style <files>', 'covering style-sheet file <file, file, ...>')
  .parse(process.argv);
function encodeOpts(optionstr) {
	return encodeURIComponent(optionstr).replace(/\-/g, ',');
}
process.chdir(__dirname + '/../');
var outputFile = encodeURIComponent(program.output) || '';
var optionstr = 'doverjs params ' + (program.console ? '-c ' : '') + (program.statistics ? '-S ' : '');
 if (program.json) {
 	optionstr += '-j';
 	optionstr = encodeOpts(optionstr);
 	cmd = "node phantomrun.js " + optionstr + " '" + currentPath + "' " + encodeURIComponent(program.json) + ' ' + outputFile
 	console.log(NOTICE_MSG);
 	chiProc.exec(cmd, function (e, std, ste) {
		e && console.log( e );
		console.log( std );
		console.log( ste );
 	});
 } else if (program.style && program.destination) {
 	optionstr += '-s';
 	optionstr = encodeOpts(optionstr);
 	cmd = "node phantomrun.js " + optionstr + " '" + currentPath + "' " + encodeURIComponent(program.style) + ' ' + encodeURIComponent(program.destination) + ' ' + outputFile;
 	console.log(NOTICE_MSG);
	chiProc.exec(cmd, function (e, std, ste) {
		e && console.log( e );
		console.log( std );
		console.log( ste );
	});
 } else if (!program.style && program.destination) {
 	console.log('Use -s <file>,... covering style-sheet file');
 } else if (program.style && !program.destination) {
 	console.log('Use -d <file>,... select destination file');
 }
